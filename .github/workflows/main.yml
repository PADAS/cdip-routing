name: Build pubsub routing transformer
on:
  push:
    branches:
      - main
      - 'release-**'
      - 'gundi-2975-smart-attachments'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  TRACING_ENABLED: ${{secrets.TRACING_ENABLED}}

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      repository: ${{ steps.vars.outputs.repository }}
    steps:
      - uses: actions/checkout@v4
      - id: vars
        run: |
          echo "tag=${{ github.head_ref || github.ref_name }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "repository=us-central1-docker.pkg.dev/cdip-78ca/gundi/cdip-routing" >> $GITHUB_OUTPUT

  run_unit_tests:
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8' 
      - name: Install pip
        run: python -m ensurepip --upgrade
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: pytest


  build:
    uses: PADAS/gundi-workflows/.github/workflows/build_docker.yml@v2
    needs: [vars, run_unit_tests]
    with:
      environment: stage
      repository: ${{ needs.vars.outputs.repository }}
      tag: ${{ needs.vars.outputs.tag }}

  dev-deploy:
    uses: PADAS/gundi-workflows/.github/workflows/terragrunt.yml@v2
    if: startsWith(github.ref, 'gundi-2975-smart-attachments')
    needs: [vars, run_unit_tests, build]
    with:
      environment: dev
      working_dir: terraform/environments/dev
      tf_version: "1.9.4"
      tg_version: "0.66.5"
      tg_command: "run-all apply -var image=${{ needs.vars.outputs.repository }}:${{ needs.vars.outputs.tag }}"

  stage-deploy:
    uses: PADAS/gundi-workflows/.github/workflows/terragrunt.yml@v2
    if: startsWith(github.ref, 'refs/heads/release')
    needs: [vars, run_unit_tests, build]
    with:
      environment: stage
      working_dir: terraform/environments/stage
      tf_version: "1.9.4"
      tg_version: "0.66.5"
      tg_command: "run-all apply -var image=${{ needs.vars.outputs.repository }}:${{ needs.vars.outputs.tag }}"

  prod-deploy:
    uses: PADAS/gundi-workflows/.github/workflows/terragrunt.yml@v2
    if: startsWith(github.ref, 'refs/heads/release')
    needs: [vars, run_unit_tests, build, stage-deploy]
    with:
      environment: prod
      working_dir: terraform/environments/prod
      tf_version: "1.9.4"
      tg_version: "0.66.5"
      tg_command: "run-all apply -var image=${{ needs.vars.outputs.repository }}:${{ needs.vars.outputs.tag }}"
